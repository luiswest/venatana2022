//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class videoClubEntities1 : DbContext
    {
        public videoClubEntities1()
            : base("name=videoClubEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alquiler> Alquiler { get; set; }
        public virtual DbSet<detAlquiler> detAlquiler { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Pelicula> Pelicula { get; set; }
        public virtual DbSet<Socio> Socio { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
    
        public virtual int EliminarEmpleado(Nullable<int> id, ObjectParameter output)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEmpleado", idParameter, output);
        }
    
        public virtual int EliminarPelicula(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarPelicula", idParameter);
        }
    
        public virtual int EliminarSocio(string carnet)
        {
            var carnetParameter = carnet != null ?
                new ObjectParameter("Carnet", carnet) :
                new ObjectParameter("Carnet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarSocio", carnetParameter);
        }
    
        public virtual int ModificarEmpleado(Nullable<int> id, string nombre, string apellido1, string apellido2, string sexo, Nullable<System.DateTime> fechaNac, string telefono, string celular, string direccion, string correoE, string estado, ObjectParameter output)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("FechaNac", fechaNac) :
                new ObjectParameter("FechaNac", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoEParameter = correoE != null ?
                new ObjectParameter("CorreoE", correoE) :
                new ObjectParameter("CorreoE", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarEmpleado", idParameter, nombreParameter, apellido1Parameter, apellido2Parameter, sexoParameter, fechaNacParameter, telefonoParameter, celularParameter, direccionParameter, correoEParameter, estadoParameter, output);
        }
    
        public virtual int ModificarPelicula(Nullable<int> id, string genero, string nombre, Nullable<decimal> valor, string rating)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var ratingParameter = rating != null ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarPelicula", idParameter, generoParameter, nombreParameter, valorParameter, ratingParameter);
        }
    
        public virtual int ModificarSocio(string carnet, string nombre, string apellido1, string apellido2, string sexo, Nullable<System.DateTime> fechaNac, Nullable<int> telefono, Nullable<int> celular, string direccion, string correoE, string estado)
        {
            var carnetParameter = carnet != null ?
                new ObjectParameter("Carnet", carnet) :
                new ObjectParameter("Carnet", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("FechaNac", fechaNac) :
                new ObjectParameter("FechaNac", typeof(System.DateTime));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var celularParameter = celular.HasValue ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoEParameter = correoE != null ?
                new ObjectParameter("CorreoE", correoE) :
                new ObjectParameter("CorreoE", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarSocio", carnetParameter, nombreParameter, apellido1Parameter, apellido2Parameter, sexoParameter, fechaNacParameter, telefonoParameter, celularParameter, direccionParameter, correoEParameter, estadoParameter);
        }
    
        public virtual int NuevaPelicula(string genero, string nombre, Nullable<decimal> valor, string rating)
        {
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(decimal));
    
            var ratingParameter = rating != null ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NuevaPelicula", generoParameter, nombreParameter, valorParameter, ratingParameter);
        }
    
        public virtual int NuevoEmpleado(string idEmpleado, string nombre, string apellido1, string apellido2, string sexo, Nullable<System.DateTime> fechaNac, string telefono, string celular, string direccion, string correoE, string estado, ObjectParameter output)
        {
            var idEmpleadoParameter = idEmpleado != null ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("FechaNac", fechaNac) :
                new ObjectParameter("FechaNac", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoEParameter = correoE != null ?
                new ObjectParameter("CorreoE", correoE) :
                new ObjectParameter("CorreoE", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NuevoEmpleado", idEmpleadoParameter, nombreParameter, apellido1Parameter, apellido2Parameter, sexoParameter, fechaNacParameter, telefonoParameter, celularParameter, direccionParameter, correoEParameter, estadoParameter, output);
        }
    
        public virtual int NuevoSocio(string carnet, string nombre, string apellido1, string apellido2, string sexo, Nullable<System.DateTime> fechaNac, Nullable<int> telefono, Nullable<int> celular, string direccion, string correoE, string estado)
        {
            var carnetParameter = carnet != null ?
                new ObjectParameter("Carnet", carnet) :
                new ObjectParameter("Carnet", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var fechaNacParameter = fechaNac.HasValue ?
                new ObjectParameter("FechaNac", fechaNac) :
                new ObjectParameter("FechaNac", typeof(System.DateTime));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var celularParameter = celular.HasValue ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoEParameter = correoE != null ?
                new ObjectParameter("CorreoE", correoE) :
                new ObjectParameter("CorreoE", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NuevoSocio", carnetParameter, nombreParameter, apellido1Parameter, apellido2Parameter, sexoParameter, fechaNacParameter, telefonoParameter, celularParameter, direccionParameter, correoEParameter, estadoParameter);
        }
    }
}
